<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on solareenlo</title>
    <link>https://solareenlo.com/docs/</link>
    <description>Recent content in Docs on solareenlo</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://solareenlo.com/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/bitcoin-fullnode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/bitcoin-fullnode/</guid>
      <description> フルノードとは  Bitcoinネットワークにおけるすべてのブロックとトランザクションをダウンロードして検証するノードのこと.  Bitcoinフルノードへのアクセス方法 bitcoin-cliを使ってアクセス cURLを使ってアクセス POSTを使ってアクセス </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/bitcoin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/bitcoin/</guid>
      <description> Bitcoin 目的 匿名性を自分で選択できつつ, 安全に価値の移転と保存に特化したシステムを構築すること.
特徴  非中央集権 自律分散 トラストレス オープンソース ブロックチェーン1.0の代表格  技術  楕円曲線DSA P2P Proo of Work  プレイヤー  コア開発者 マイナー ユーザー 投資家・投機家 法律  スケーリング方法  コンセンサスアルゴリズムを速くする（分散性のために1ブロック生成にわざと10分かけてる） ブロックに含まれるトランザクションを増やす（Block weightが4MB以下/segwit導入により） オフチェーン（Lightning networkなど） サイドチェーン シャーディング  Reference: ブロックチェーンとスケーラビリティ
参考サイト  bitcoinのしくみ Programming The Blockchain C# 日本語 Blockchain Core Camp season1のビデオ資料 Blockchain Core Camp season1のpdf資料 Blockchain Core Camp season2のビデオ資料  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/command/</guid>
      <description>コマンドとは コンピュータに特定の機能の実行を指示する命令のこと. たくさんのコマンドがあり, 黒い画面に直接入力する.
psコマンド psコマンドはプロセスの動作状況を確認するためのコマンド.
auxオプション
auxオプションは、aとuとxというオプションを組み合わせたものです。
 a: 端末操作のプロセスを表示する u: CPUやメモリの使用率などを表示する x: 端末操作以外のプロセスを表示する  ps aux &amp;gt; USER PID %CPU %MEM VSZ RSS TT STAT STARTED TIME COMMAND &amp;gt; solareenlo 96263 4.3 2.0 5500012 168620 ?? S 水07PM 21:03.04 /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal &amp;gt; その他たくさん  こんな感じで標準出力される.
Reference: ps auxの見方がよく判らない・・・</description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/container/</guid>
      <description>コンテナ技術とは OS上に他のプロセスからは隔離されたアプリケーション実行環境を構築することで, 仮想的な動作環境をより少ないコンピュータリソースで実現する技術のこと.
Reference: コンテナ技術とは何？
コンテナとは  コンテンは仮想マシンの一種. コンテナ型仮想化という技術を使っている. 特徴  コンテナの容量が小さい 現実的な速度で, インターネット経由で受け渡しできる. 動作が軽い １つのホストOS上でたくさんのコンテナを動かすことができる.  そしてコンテナが増えすぎたので, 複数のコンテナを管理するコンテナ・オーケストレーションが生み出された.  Reference: Kubernetesってなにそれおいしいの？という人向けの超入門</description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/crypto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/crypto/</guid>
      <description>暗号通貨/暗号資産とは 暗号技術を用いた通貨/資産のこと.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/docker/</guid>
      <description>Dockerとは コンテナ型の仮想環境を作成, 配布, 実行するためのプラットフォーム.
Dockerについての良い読み物→2018年なぜ私達はコンテナ/Dockerを使うのか.
Dockerのメリット/デメリット メリット  ゲストOSはホストのKernelを直接使うためオーバーヘッドが小さくて高速 ゲストOSがそれぞれにKernelを持たないため, Memory消費量やDisk消費量を節約できる 必要とする資源が少ないため, 多くのゲストOSを立ち上げることが可能 Kernelを新しく起動する必要がないため, ゲストOSの起動が速い コンテナのイメージ(雛形)からコンテナ(実体)を作るため, 同一構成のOSを簡単に複数作れる テストが通ったイメージは本番環境でもすぐに使える(開発とデプロイのサイクルが速い)  Reference: Dockerの利点   デメリット  提供できるホストの種類が少ない(ホストOSのKernelにLinux使ってたらゲストOSのKernelにWindows Serverは使えない) 完全仮想化に比べて, 管理者が学ぶべきことが多い  Reference: Dockerの欠点   インストール方法 Linux編 curl -fsSL get.docker.com -o get-docker.sh sh get-docker.sh 簡単な使い方 Reference: Dockerコマンドメモ
// nginxをコンテナとして起動 sudo docker container run --publish 80:80 --name webhost nginx // 上記をデーモンとして動かす sudo docker container run --publish 80:80 --detach --name webhost nginx // コンテナ一覧を表示 sudo docker container ls &amp;gt; CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES &amp;gt; b6e083217819 nginx &amp;quot;nginx -g &#39;daemon of…&amp;quot; 7 minutes ago Up 23 seconds 0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/ethereum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/ethereum/</guid>
      <description> Ethereum 目的 ブロックチェーン上でアプリを動かして, スマートコントラクトを実行できるようにして, 経済をさらに発展させる.
アプリの特徴: 分散型, 管理者不在, 一度デプロイすると修正不可
特徴  スマートコントラクトのプラットフォーム アカウントベース ブロックチェーン2.0の代表格  スケーリング方法  サイドチェーン  Plasma: Ethereumのメインチェーンとは別のプラズマチェーンと呼ばれるサイドチェーンをマークル木状にどんどん連ねることで, メインチェーンに格納される情報量を減少させる仕組み. エンドユーザーが出金したいときはルートチェーンに問い合わせる. 初心者向けプラズマ勉強法まとめノートー 0から3週間で学んだこと lightningとplasmaってなにが違うんですか？ Plasma スケーラブルな自律型スマートコントラクト  オフチェーン  Raiden Network: ブロックチェーン内の処理をブロックチェーンの外側に持っていくことで, メインチェーンの負担を軽減する仕組み. 最終的な取引結果のみをブロックチェーンで処理する.  シャーディング  トランザクション処理を各ノードで分割して行うことで, 処理速度の向上を図る仕組み. Ethereum2.0のCasperで導入されるPoSと相性が良い. Ethereumのシャーディング概論   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/hugo/</guid>
      <description> Hugoとは 静的なhtmlを生成する事ができる静的サイトジェネレータの1つ. Go言語で書かれてる. 記事を書くだけならGo言語を知らなくても良い. 記事はMarkdownで書ける.
.mdを削除した時に.htmlも同様に削除するオプション hugo server -D --cleanDestinationDir  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/iota/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/iota/</guid>
      <description> IOTA 目的 オープンIoTでブロックチェーンの良さ(分散性/耐改ざん性/オープン性)を使えるようにしつつ(スケーリング・マイニングコスト・トランザクションの承認の遅さを解決しつつ)インダストリー4.0を推し進めること.
特徴  小さなデータの保存と交換に特化した設計. 平衡三進数を使用. 量子コンピュータ耐性のために電子署名にはWinternitz One Time Signatureを使用.  署名は使い捨てなので送金に使ったアドレスにもう1度入金すると盗まれる可能性特大. というか多額のIOTAを盗まれた実績有. 今はそうならないようにwalletが上手に管理してくれてる.  スケーリングのためにブロックは生成せずに各々のトランザクションがDAG形式で自分より前のトランザションを承認していく.  まだ発展途上なのでチェック機能が存在する. トランザクションはInput/Output/Remainderの3種類が1まとめになったBundleとしてTangle内を流れてる.  UTXOを採用.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/kubernetes/</guid>
      <description>Kubernetesとは コンテナ・オーケストレーターの一種.
Kubernetesが他と違うところは, ① 様々なOSSと組み合わせることにより, 柔軟に機能拡張なところ.
 コンテナ運用を更に効率化 / 高速化  詳細なメトリック監視と可視化・・・Prometheus + Grafana コンテナのログの転送収集・・・Fluentd / Fluent Bit ネットワークトラフィックの制御・・・ Istio + Envoy  Kubernetesの適応領域の拡大  機械学習プラットフォーム・・・Kubeflow 分散ストレージ・・・Rook 分散型データベース・・・Vitess   ② 本格的な宣言的オペレーションとInfrastructure as Codeを実現可能
③ クラスター上にデプロイするシステムの構成をコード(マニフェストファイル)によって定義できる
 運用オペレーションはコードの変更によって実施し, 作業を簡素化する. 複数Kubernetesクラスターでの相互運用を実現する  Reference: Kubernetesの基礎</description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/programming-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/programming-language/</guid>
      <description> プログラミング言語 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/programming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/programming/</guid>
      <description> プログラミングとは コンピュータプログラムを作成することにより, 人間の意図した処理を行うようにコンピュータに指示を与える行為のこと. その為の便利なツールがたくさんある.
プログラミングをするのに役立つツール  プログラミング言語 (C, Java, JavaScript, Pythonなど)  手続き型, オブジェクト指向型, 関数型, 静的型付け, 動的型付けなどいろんな種類がある. 最終的にバイナリデータになって, コンピュータが処理する.  テキストエディタ (Visual Studio Code, Vimなど)  コードを書くのに役に立つエディタ.  統合開発環境 (Visual Studio, Jet Brainsなど)  コンパイル, テキストエディタ, デバッガなどを1つのソフトで行えるようにしたもの.  バージョン管理システム (gitなど)  ファイルの変更履歴を管理する為のシステム.  ホスティングサービス (GitHub, GitLabなど)  上記gitを使って様々なプログラムをweb上に公開したり, それを通じて交流したりすることができるサービス. 無償・有償がある.   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/rust/</guid>
      <description> Rust </description>
    </item>
    
    <item>
      <title></title>
      <link>https://solareenlo.com/docs/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/docs/vim/</guid>
      <description>Vimとは viから派生したテキストエディタ. 自分好みに拡張がどんどんできる.</description>
    </item>
    
  </channel>
</rss>