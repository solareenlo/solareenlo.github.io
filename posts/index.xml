<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on solareenlo</title>
    <link>https://solareenlo.com/posts/</link>
    <description>Recent content in Posts on solareenlo</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Apr 2019 09:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://solareenlo.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bitcoindへのアクセス方法</title>
      <link>https://solareenlo.com/posts/bitcoind/</link>
      <pubDate>Wed, 17 Apr 2019 09:00:00 +0900</pubDate>
      
      <guid>https://solareenlo.com/posts/bitcoind/</guid>
      <description> bitcoindへのアクセス方法3選(bitcoin-cli, curl, POST). 3つともJSON-RPCで通信してる.
 bitcoindとは, 名前の通りunixのデーモンとして動作する事を目的とするBitcoinのクライアントで, JSON-RPCで開発者向けのAPIを提供する. したがって, Webサービスとして動作するBitcoinウォレットのバックエンドとしてや, マイニングプールのサーバーとして使われる.
Reference: Bitcoinウォレットの比較
 1. bitcoin-cliを使ってアクセスする.  bitcoin-cliとは, bitcoindへJSON-RPCを使ってアクセスするツールのこと.
 bitcoindを使ってBitcoinのフルノードを立ち上げて,
bitcoin-cli getblockchaininfo  とか.
2. cURLを使ってアクセスする.  ネットワーク: mainnet 接続環境: ローカル ポート番号: 8332 ユーザーの名前: user-name パスワード: user-password 投げつけているbitcoin-cliのメソッド: getblockchaininfo  curl --data-binary &#39;{&amp;quot;jsonrpc&amp;quot;:&amp;quot;1.0&amp;quot;,&amp;quot;id&amp;quot;:&amp;quot;curltext&amp;quot;,&amp;quot;method&amp;quot;:&amp;quot;getblockchaininfo&amp;quot;,&amp;quot;params&amp;quot;:[]}&#39; -H &#39;content-type:text/plain;&#39; http://user-name:user-password@127.0.0.1:8332/ | jq  3. 自作プログラムでPOSTしてアクセスする. bitcoindはHTTPリクエストメソッドのPOSTに対応しているのでPOSTを投げつける. 以下のプログラムがその例.
 https://github.com/solareenlo/bc-json-rpc  </description>
    </item>
    
    <item>
      <title>このサイトの作り方</title>
      <link>https://solareenlo.com/posts/how-to-make-this-site/</link>
      <pubDate>Tue, 16 Apr 2019 06:49:32 +0900</pubDate>
      
      <guid>https://solareenlo.com/posts/how-to-make-this-site/</guid>
      <description>Macユーザー用
ものすごい初歩からこのサイトの作り方を説明しています. この手順で作成するとGitHubに全ての内容/更新履歴/更新内容が公開されますので, 適宜読み替えてください.
Mac に git をインストールする https://git-scm.com/download/mac
GitHub にアカウントを作成する https://github.com
Mac に Homebrew をインストールする /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;   References:  https://brew.sh/index_ja.html https://github.com/Homebrew/brew   Mac に Hugo(静的サイトジェネレーター) をインストールする brew install hugo  Reference: Install Hugo  Hugo の Extended バージョンをインストールする 以下内容をhugo_latest.sh名で保存する.
# hugo_latest.sh # Find the latest Hugo from GitHub echo &#39;🐹 Starting Hugo Install / Update 🐹&#39; echo &#39; Note: Please be sure to have curl and grep installed&#39; echo &#39;&#39; url=$(curl -s &amp;quot;https://api.</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://solareenlo.com/posts/hello-world/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://solareenlo.com/posts/hello-world/</guid>
      <description>Hello World!</description>
    </item>
    
  </channel>
</rss>